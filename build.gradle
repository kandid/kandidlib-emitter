/*
 * (C) Copyright 2005-2014, by Dominikus Diesch.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'

sourceCompatibility = 1.7
version = '0.4.0'
group = 'de.kandid'
def theName = 'kandidlib-emitter'

eclipse {
	classpath {defaultOutputDir = file('build/eclipse/classes')}
	project {natures 'org.eclipse.jdt.groovy.core.groovyNature', 'org.springsource.ide.eclipse.gradle.core.nature'}
}

repositories {
	mavenLocal()
	mavenCentral()
}

sourceSets {
	main {java {srcDir 'src'} resources {srcDir 'src'}}
	test {java {srcDir 'test'}}
}

dependencies {
	compile group: 'org.ow2.asm', name: 'asm', version: '4.2'
	testCompile group: 'junit', name: 'junit', version: '4.11'
	testCompile files(jar.archivePath)
}

jar {baseName = theName}

task sourcesJar(type: Jar, dependsOn: classes) {
	baseName = theName
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives jar
	archives sourcesJar
}